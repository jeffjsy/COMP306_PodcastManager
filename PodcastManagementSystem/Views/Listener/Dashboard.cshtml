@using Microsoft.AspNetCore.Identity
@model List<PodcastManagementSystem.Models.Episode>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Listener Dashboard";
}

<h1>Discover Episodes</h1>

<p>
    Welcome back, @UserManager.GetUserName(User)! Explore the latest and greatest podcasts.
</p>

<div class="row mb-4">
    <div class="col-12">
        <form asp-controller="Listener" asp-action="Dashboard" method="get">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control" placeholder="Search by topic (title/description)..." value="@ViewBag.SearchTerm" />
                <input type="text" name="creatorId" class="form-control" placeholder="Filter by host/creator ID (e.g., user-guid-admin)..." />
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </form>
    </div>
</div>

<hr />

@if (!string.IsNullOrWhiteSpace(ViewBag.SearchTerm))
{
    <h2>Search Results for "@ViewBag.SearchTerm"</h2>
}
else
{
    <div class="d-flex justify-content-between mb-3">
        <h2>Recommended Episodes</h2>
        <div>
            <a asp-action="Dashboard" asp-route-viewType="recent" class="btn btn-sm btn-outline-secondary @(Context.Request.Query["viewType"] == "recent" || Context.Request.Query["viewType"] == "" ? "active" : "")">Recent</a>
            <a asp-action="Dashboard" asp-route-viewType="popular" class="btn btn-sm btn-outline-secondary @(Context.Request.Query["viewType"] == "popular" ? "active" : "")">Popular</a>
        </div>
    </div>
}


@if (Model != null && Model.Any())
{
    <div class="list-group">
        @foreach (var episode in Model)
        {
            <a asp-controller="Listener" asp-action="Episode" asp-route-id="@episode.EpisodeID" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                <div>
                    <h5>@episode.Title (@episode.Podcast.Title)</h5>
                    <small class="text-muted">Host: @episode.Podcast.CreatorID | Release: @episode.ReleaseDate.ToShortDateString()</small>
                </div>
                <span class="badge bg-primary rounded-pill">Plays: @episode.PlayCount</span>
            </a>
        }
    </div>
}
else
{
    <div class="alert alert-warning">
        No episodes found matching your criteria. Try adjusting your search or viewing all recent episodes.
    </div>
}